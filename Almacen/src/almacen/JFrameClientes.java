/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package almacen;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author alumno
 */
public class JFrameClientes extends javax.swing.JFrame {

    /**
     * Creates new form JFrameClientes
     */
    static javax.swing.JFrame Principal;
    String op="";
    ConectorSQL cn = new ConectorSQL();
    
    public JFrameClientes(javax.swing.JFrame padre) {
            JFrameClientes.Principal=padre;
            initComponents();
            enableEvents(java.awt.AWTEvent.WINDOW_EVENT_MASK);
            this.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
            jTextFieldCodigo.grabFocus();
            deshabilitar();
        try {
            cn.conectarDB();
            //cn.crearTabla();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "ERROR AL CONECTAR.");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabelCodigo = new javax.swing.JLabel();
        jLabelNIF = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelApellidos = new javax.swing.JLabel();
        jLabelDomicilio = new javax.swing.JLabel();
        jLabelCP = new javax.swing.JLabel();
        jLabelLocalidad = new javax.swing.JLabel();
        jLabelTelefono = new javax.swing.JLabel();
        jLabelMovil = new javax.swing.JLabel();
        jLabelFax = new javax.swing.JLabel();
        jLabelEmail = new javax.swing.JLabel();
        jTextFieldCodigo = new javax.swing.JTextField();
        jTextFieldNIF = new javax.swing.JTextField();
        jLabelTotal = new javax.swing.JLabel();
        jTextFieldLetra = new javax.swing.JTextField();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldApellidos = new javax.swing.JTextField();
        jTextFieldDomicilio = new javax.swing.JTextField();
        jTextFieldCP = new javax.swing.JTextField();
        jTextFieldLocalidad = new javax.swing.JTextField();
        jTextFieldTelefono = new javax.swing.JTextField();
        jTextFieldMovil = new javax.swing.JTextField();
        jTextFieldFax = new javax.swing.JTextField();
        jTextFieldEmail = new javax.swing.JTextField();
        jTextFieldTotal = new javax.swing.JTextField();
        jButtonAceptar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonSalir = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuMantenimiento = new javax.swing.JMenu();
        jMenuItemAltas = new javax.swing.JMenuItem();
        jMenuItemBajas = new javax.swing.JMenuItem();
        jMenuItemModificacion = new javax.swing.JMenuItem();
        jMenuItemVolver = new javax.swing.JMenuItem();
        jMenuConsultas = new javax.swing.JMenu();
        jMenuItemPantalla = new javax.swing.JMenuItem();
        jMenuImpresora = new javax.swing.JMenu();
        jMenuItemPorCodigo = new javax.swing.JMenuItem();
        jMenuItemEntreCodigo = new javax.swing.JMenuItem();
        jMenuItemGrafica = new javax.swing.JMenuItem();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CONSULTAS");
        setAutoRequestFocus(false);
        setName("jFrameClientes"); // NOI18N
        setResizable(false);

        jLabelCodigo.setText("Código");
        jLabelCodigo.setName(""); // NOI18N

        jLabelNIF.setText("N.I.F.");
        jLabelNIF.setName(""); // NOI18N

        jLabelNombre.setText("Nombre");

        jLabelApellidos.setText("Apellidos");

        jLabelDomicilio.setText("Domicilio");

        jLabelCP.setText("C.P");

        jLabelLocalidad.setText("Localidad");

        jLabelTelefono.setText("Teléfono");

        jLabelMovil.setText("Móvil");

        jLabelFax.setText("Fax");

        jLabelEmail.setText("e-mail");

        jTextFieldCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodigoActionPerformed(evt);
            }
        });
        jTextFieldCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCodigoKeyPressed(evt);
            }
        });

        jTextFieldNIF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNIFActionPerformed(evt);
            }
        });
        jTextFieldNIF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNIFKeyPressed(evt);
            }
        });

        jLabelTotal.setText("Total Ventas");

        jTextFieldLetra.setEditable(false);
        jTextFieldLetra.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTextFieldLetra.setEnabled(false);
        jTextFieldLetra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLetraActionPerformed(evt);
            }
        });

        jTextFieldName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNameKeyPressed(evt);
            }
        });

        jTextFieldApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldApellidosKeyPressed(evt);
            }
        });

        jTextFieldDomicilio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldDomicilioKeyPressed(evt);
            }
        });

        jTextFieldCP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldCPKeyPressed(evt);
            }
        });

        jTextFieldLocalidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldLocalidadKeyPressed(evt);
            }
        });

        jTextFieldTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTelefonoActionPerformed(evt);
            }
        });
        jTextFieldTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldTelefonoKeyPressed(evt);
            }
        });

        jTextFieldMovil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldMovilKeyPressed(evt);
            }
        });

        jTextFieldFax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldFaxKeyPressed(evt);
            }
        });

        jTextFieldEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEmailKeyPressed(evt);
            }
        });

        jTextFieldTotal.setText("0");

        jButtonAceptar.setMnemonic('a');
        jButtonAceptar.setText("Aceptar");
        jButtonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAceptarActionPerformed(evt);
            }
        });
        jButtonAceptar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButtonAceptarKeyPressed(evt);
            }
        });

        jButtonCancelar.setMnemonic('C');
        jButtonCancelar.setText("Calcelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonSalir.setMnemonic('s');
        jButtonSalir.setText("Salir");
        jButtonSalir.setEnabled(false);
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        jMenuMantenimiento.setMnemonic('M');
        jMenuMantenimiento.setText("Mantenimiento");

        jMenuItemAltas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemAltas.setMnemonic('a');
        jMenuItemAltas.setText("Altas");
        jMenuItemAltas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAltasActionPerformed(evt);
            }
        });
        jMenuMantenimiento.add(jMenuItemAltas);

        jMenuItemBajas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemBajas.setMnemonic('b');
        jMenuItemBajas.setText("Bajas");
        jMenuItemBajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemBajasActionPerformed(evt);
            }
        });
        jMenuMantenimiento.add(jMenuItemBajas);

        jMenuItemModificacion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemModificacion.setMnemonic('m');
        jMenuItemModificacion.setText("Modificación");
        jMenuItemModificacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModificacionActionPerformed(evt);
            }
        });
        jMenuMantenimiento.add(jMenuItemModificacion);

        jMenuItemVolver.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemVolver.setMnemonic('v');
        jMenuItemVolver.setText("Volver");
        jMenuItemVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVolverActionPerformed(evt);
            }
        });
        jMenuMantenimiento.add(jMenuItemVolver);

        jMenuBar1.add(jMenuMantenimiento);

        jMenuConsultas.setMnemonic('t');
        jMenuConsultas.setText("Consultas");

        jMenuItemPantalla.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemPantalla.setMnemonic('p');
        jMenuItemPantalla.setText("Pantalla");
        jMenuItemPantalla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPantallaActionPerformed(evt);
            }
        });
        jMenuConsultas.add(jMenuItemPantalla);

        jMenuImpresora.setMnemonic('i');
        jMenuImpresora.setText("Impresora");

        jMenuItemPorCodigo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemPorCodigo.setMnemonic('c');
        jMenuItemPorCodigo.setText("Por Código");
        jMenuItemPorCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPorCodigoActionPerformed(evt);
            }
        });
        jMenuImpresora.add(jMenuItemPorCodigo);

        jMenuItemEntreCodigo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemEntreCodigo.setMnemonic('e');
        jMenuItemEntreCodigo.setText("Entre Código");
        jMenuItemEntreCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEntreCodigoActionPerformed(evt);
            }
        });
        jMenuImpresora.add(jMenuItemEntreCodigo);

        jMenuItemGrafica.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemGrafica.setMnemonic('g');
        jMenuItemGrafica.setText("Gráfica");
        jMenuItemGrafica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemGraficaActionPerformed(evt);
            }
        });
        jMenuImpresora.add(jMenuItemGrafica);

        jMenuConsultas.add(jMenuImpresora);

        jMenuBar1.add(jMenuConsultas);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelCodigo)
                                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelCP)
                                    .addComponent(jLabelTelefono))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(jLabelMovil))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabelLocalidad))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelNIF)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTextFieldNIF, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jTextFieldLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(24, 24, 24)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelNombre)
                                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(jLabelDomicilio)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldCP, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelEmail)
                                        .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(64, 64, 64)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabelTotal)))
                                .addComponent(jTextFieldDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldMovil, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelFax)
                                    .addComponent(jTextFieldFax, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabelApellidos)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButtonSalir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAceptar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCancelar)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCodigo)
                    .addComponent(jLabelNIF)
                    .addComponent(jLabelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNIF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLetra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelApellidos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabelDomicilio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldDomicilio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCP)
                    .addComponent(jLabelLocalidad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLocalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTelefono)
                    .addComponent(jLabelMovil)
                    .addComponent(jLabelFax))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldMovil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEmail)
                    .addComponent(jLabelTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonAceptar)
                        .addComponent(jButtonCancelar)))
                .addContainerGap())
        );

        jButtonAceptar.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldNIFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNIFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNIFActionPerformed

    private void jTextFieldCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodigoActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jTextFieldCodigoActionPerformed

    private void jTextFieldTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTelefonoActionPerformed

  
    
    private void jButtonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAceptarActionPerformed
        if(op.equals("altas")){
            try {
                comprobarTextFields_Altas();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "ERROR");
            }
        }
        else
        {
            if(op.equals("modificar")){
                try {
                    comprobarTextFields_Mod();
                } catch (Exception ex) {
                     JOptionPane.showMessageDialog(null, "ERROR");
                }
            }
            else
            {
                if(op.equals("bajas")){
                int num = JOptionPane.showConfirmDialog(rootPane,"¿Seguro que quieres borrar ese cliente?", "ERROR.", JOptionPane.OK_CANCEL_OPTION);
                switch(num)
                {
                    case JOptionPane.OK_OPTION:
                        try {
                            cn.borrarCliente(jTextFieldCodigo.getText());
                            borrarTodo();
                            deshabilitar();
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, "ERROR AL BORRAR.", "ERROR.", JOptionPane.ERROR_MESSAGE);
                        }
                        break;
                    case JOptionPane.CANCEL_OPTION://Si das a "cancelar" en la ventana anterior muestra este mensaje.
                        jTextFieldCodigo.setText("");
                        jTextFieldCodigo.grabFocus();
                        break;
                    case JOptionPane.CLOSED_OPTION://Si cierras la ventana anterior muestra este mensaje.
                        jTextFieldCodigo.setText("");
                        jTextFieldCodigo.grabFocus();
                        break;
                }
                }
                else{
                    comprobarTextFields();
                }
            }
        }
    }//GEN-LAST:event_jButtonAceptarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        borrarTodo();
        deshabilitar();
        jTextFieldCodigo.grabFocus();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jTextFieldApellidosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldApellidosKeyPressed
        if(evt.getKeyCode()==10)
        jTextFieldDomicilio.grabFocus();
    }//GEN-LAST:event_jTextFieldApellidosKeyPressed

    private void jTextFieldCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodigoKeyPressed
        if(evt.getKeyCode()==10)
        {
            
            try {
                rellenarCodigo();
                if(op.equals("altas")){
                    try {
                        if(consultaCodigo()){
                            habilitar();
                            jTextFieldNIF.grabFocus();
                            jTextFieldCodigo.setEnabled(false);
                        }
                        else{
                            JOptionPane.showMessageDialog(rootPane,"El código ya está dado de alta.", "ERROR.", JOptionPane.ERROR_MESSAGE);
                            jTextFieldCodigo.setText("");
                            jTextFieldCodigo.grabFocus();
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "ERROR DE BASE DE DATOS.", "ERROR.", JOptionPane.ERROR_MESSAGE);
                    }
                }
                else
                {
                    if(op.equals("bajas")){
                        try {
                            if(!consultaCodigo()){
                                String [] datos = cn.sacarDatos(jTextFieldCodigo.getText());
                                    jTextFieldNIF.setText(datos[0]);
                                    jTextFieldApellidos.setText(datos[1]);
                                    jTextFieldName.setText(datos[2]);
                                    jTextFieldDomicilio.setText(datos[3]);
                                    jTextFieldCP.setText(datos[4]);
                                    jTextFieldLocalidad.setText(datos[5]);
                                    jTextFieldTelefono.setText(datos[6]);
                                    jTextFieldMovil.setText(datos[7]);
                                    jTextFieldFax.setText(datos[8]);
                                    jTextFieldEmail.setText(datos[9]);
                                    jTextFieldCodigo.setEnabled(false);
                                    jButtonAceptar.setEnabled(true);
                                    jButtonSalir.setEnabled(true);
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(null, "El código no está dado de alta.", "ERROR.", JOptionPane.ERROR_MESSAGE);
                                jTextFieldCodigo.setText("");
                            }
                        } catch (SQLException ex) {
                            Logger.getLogger(JFrameClientes.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                    else{
                        if(op.equals("modificar")){
                            try {
                                if(consultaCodigo()){
                                    JOptionPane.showMessageDialog(null, "El código no está dado de alta.", "ERROR.", JOptionPane.ERROR_MESSAGE);
                                    jTextFieldCodigo.setText("");
                                }
                                else{
                                    String [] datos = cn.sacarDatos(jTextFieldCodigo.getText());
                                    jTextFieldNIF.setText(datos[0]);
                                    jTextFieldApellidos.setText(datos[1]);
                                    jTextFieldName.setText(datos[2]);
                                    jTextFieldDomicilio.setText(datos[3]);
                                    jTextFieldCP.setText(datos[4]);
                                    jTextFieldLocalidad.setText(datos[5]);
                                    jTextFieldTelefono.setText(datos[6]);
                                    jTextFieldMovil.setText(datos[7]);
                                    jTextFieldFax.setText(datos[8]);
                                    jTextFieldEmail.setText(datos[9]);
                                    habilitar();
                                    jTextFieldNIF.grabFocus();
                                    jTextFieldCodigo.setEnabled(false);
                                }
                            } catch (SQLException ex) {
                                JOptionPane.showMessageDialog(null, "ERROR DE BASE DE DATOS.", "ERROR.", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                    }
                }
            } catch (Exception ex) {
                jTextFieldCodigo.setText("");
            }
        }
    }//GEN-LAST:event_jTextFieldCodigoKeyPressed

    private void jTextFieldNIFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNIFKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        jTextFieldName.grabFocus();
    }//GEN-LAST:event_jTextFieldNIFKeyPressed

    private void jTextFieldNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNameKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        jTextFieldApellidos.grabFocus();
    }//GEN-LAST:event_jTextFieldNameKeyPressed

    private void jTextFieldDomicilioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDomicilioKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        jTextFieldCP.grabFocus();
    }//GEN-LAST:event_jTextFieldDomicilioKeyPressed

    private void jTextFieldCPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCPKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        jTextFieldLocalidad.grabFocus();
    }//GEN-LAST:event_jTextFieldCPKeyPressed

    private void jTextFieldTelefonoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTelefonoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        jTextFieldMovil.grabFocus();
    }//GEN-LAST:event_jTextFieldTelefonoKeyPressed

    private void jTextFieldLocalidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLocalidadKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        jTextFieldTelefono.grabFocus();
    }//GEN-LAST:event_jTextFieldLocalidadKeyPressed

    private void jTextFieldMovilKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMovilKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        jTextFieldFax.grabFocus();
    }//GEN-LAST:event_jTextFieldMovilKeyPressed

    private void jTextFieldFaxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFaxKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        jTextFieldEmail.grabFocus();
    }//GEN-LAST:event_jTextFieldFaxKeyPressed

    private void jTextFieldEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmailKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
        jButtonAceptar.grabFocus();
    }//GEN-LAST:event_jTextFieldEmailKeyPressed

    private void jButtonAceptarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonAceptarKeyPressed
        
    }//GEN-LAST:event_jButtonAceptarKeyPressed

    private void jTextFieldLetraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLetraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLetraActionPerformed

    private void jMenuItemVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVolverActionPerformed
        // TODO add your handling code here:
        Principal.setEnabled(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItemVolverActionPerformed

    private void jMenuItemAltasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAltasActionPerformed
        jTextFieldCodigo.setEnabled(true);
        jButtonSalir.setEnabled(true);
        op="altas";
        jTextFieldCodigo.grabFocus();
    }//GEN-LAST:event_jMenuItemAltasActionPerformed

    private void jMenuItemBajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemBajasActionPerformed
        // TODO add your handling code here:
        jTextFieldCodigo.setEnabled(true);
        jButtonSalir.setEnabled(true);
        op="bajas";
        jTextFieldCodigo.grabFocus();
    }//GEN-LAST:event_jMenuItemBajasActionPerformed

    private void jMenuItemModificacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModificacionActionPerformed
        // TODO add your handling code here:
        jTextFieldCodigo.setEnabled(true);
        jButtonSalir.setEnabled(true);
        op="modificar";
        jTextFieldCodigo.grabFocus();
    }//GEN-LAST:event_jMenuItemModificacionActionPerformed

    private void jMenuItemPantallaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPantallaActionPerformed
        // TODO add your handling code here:
        enDesarrollo(jMenuConsultas.getText(), jMenuItemPantalla.getText());
    }//GEN-LAST:event_jMenuItemPantallaActionPerformed

    private void jMenuItemPorCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPorCodigoActionPerformed
        // TODO add your handling code here:
        GestorBD g = new GestorBD();
        g.ejecutarInforme();
    }//GEN-LAST:event_jMenuItemPorCodigoActionPerformed

    private void jMenuItemEntreCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEntreCodigoActionPerformed
        // TODO add your handling code here:
        VentanaEntreCodigos e = new VentanaEntreCodigos();
        e.show();
    }//GEN-LAST:event_jMenuItemEntreCodigoActionPerformed

    private void jMenuItemGraficaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemGraficaActionPerformed
        // TODO add your handling code here:
        Grafico g = new Grafico();
        g.ejecutarInforme();
    }//GEN-LAST:event_jMenuItemGraficaActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:
        jButtonSalir.setEnabled(false);
        borrarTodo();
        deshabilitar();
    }//GEN-LAST:event_jButtonSalirActionPerformed

    /**
     * System.out.print(jTextFieldName.getText().toString());
     */
    
    private boolean consultaCodigo() throws SQLException{
        String sentencia = "select codigo from clientes;";
        ResultSet listaMovimientos = cn.st.executeQuery(sentencia);
        while (listaMovimientos.next()) {
            String cod = listaMovimientos.getString("codigo");
            //JOptionPane.showMessageDialog(null, cod);
            if(cod.equals(jTextFieldCodigo.getText()))
            {
                return false;
            }
        }
        return true;
    }
    private void borrarTodo()
    {
        jTextFieldApellidos.setText("");
        jTextFieldCP.setText("");
        jTextFieldCodigo.setText("");
        jTextFieldDomicilio.setText("");
        jTextFieldEmail.setText("");
        jTextFieldFax.setText("");
        jTextFieldLetra.setText("");
        jTextFieldLocalidad.setText("");
        jTextFieldMovil.setText("");
        jTextFieldNIF.setText("");
        jTextFieldName.setText("");
        jTextFieldTelefono.setText("");
        jTextFieldTotal.setText("0");
    }
    
    private void deshabilitar()
    {
        jTextFieldApellidos.setEnabled(false);
        jTextFieldCP.setEnabled(false);
        jTextFieldCodigo.setEnabled(false);
        jTextFieldDomicilio.setEnabled(false);
        jTextFieldEmail.setEnabled(false);
        jTextFieldFax.setEnabled(false);
        jTextFieldLetra.setEnabled(false);
        jTextFieldLocalidad.setEnabled(false);
        jTextFieldMovil.setEnabled(false);
        jTextFieldNIF.setEnabled(false);
        jTextFieldName.setEnabled(false);
        jTextFieldTelefono.setEnabled(false);
        jTextFieldTotal.setEnabled(false);
        jButtonAceptar.setEnabled(false);
//        jButtonCancelar.setEnabled(false);
    }
    
    private void deshabilitar2()
    {
        jTextFieldApellidos.setEnabled(false);
        jTextFieldCP.setEnabled(false);
        jTextFieldCodigo.setEnabled(false);
        jTextFieldDomicilio.setEnabled(false);
        jTextFieldEmail.setEnabled(false);
        jTextFieldFax.setEnabled(false);
        jTextFieldLetra.setEnabled(false);
        jTextFieldLocalidad.setEnabled(false);
        jTextFieldMovil.setEnabled(false);
        jTextFieldNIF.setEnabled(false);
        jTextFieldTelefono.setEnabled(false);
        jTextFieldTotal.setEnabled(false);
        jButtonAceptar.setEnabled(false);
        jTextFieldName.grabFocus();
//        jButtonCancelar.setEnabled(false);
    }
    
    private void comprobarTextFields(){
        //Tenemos que aher todas las validaciones en bucle, una por una.
        if(jTextFieldCodigo.getText().matches("[a-zA-Z0-9]{1,6}"))
        {
            if(jTextFieldNIF.getText().matches("[0-9]{8}"))
            {
                 rellenarLetra();
                if(jTextFieldName.getText().matches("[a-zA-Z\\s]{1,15}"))
                {
                    if(jTextFieldApellidos.getText().matches("[a-zA-Z\\s.-]{1,35}"))
                    {
                        if(jTextFieldDomicilio.getText().matches("[a-zA-Z0-9\\s\\W]{1,40}"))
                        {
                            if(jTextFieldCP.getText().matches("[0-9]{5}")) 
                            {
                                if(jTextFieldLocalidad.getText().matches("[a-zA-Z\\s.-]{1,20}"))
                                {
                                    if(jTextFieldTelefono.getText().matches("[0-9]{9}"))
                                    {
                                        if(jTextFieldMovil.getText().matches("[0-9]{9}"))
                                        {
                                            if(jTextFieldFax.getText().matches("[0-9]{9}"))
                                            {
                                                if(jTextFieldEmail.getText().matches("[a-zA-z0-9@_.-]{1,20}"))
                                                {
                                                    JOptionPane.showMessageDialog(rootPane, "El formulario ha sido rellenado correctamente.","Formulario Correcto", WIDTH);
                                                    borrarTodo();
                                                }
                                                else
                                                {
                                                    JOptionPane.showMessageDialog(rootPane, "El email no puede contener acentos ni 'ñ' ni '/' \n y no puede superar los 20 caracteres","Error en el domicilio", WIDTH);
                                                    jTextFieldEmail.grabFocus();
                                                }
                                                
                                            }
                                            else
                                            {
                                                JOptionPane.showMessageDialog(rootPane, "El fax debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                                jTextFieldFax.grabFocus();
                                            }
                                        }
                                        else
                                        {
                                            JOptionPane.showMessageDialog(rootPane, "El móvil debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                            jTextFieldMovil.grabFocus();
                                        }
                                    }
                                    else
                                    {
                                        JOptionPane.showMessageDialog(rootPane, "El teléfono debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                        jTextFieldTelefono.grabFocus();
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(rootPane, "La localidad no puede contener números ni '_' \n y no puede superar los 20 caracteres","Error en el domicilio", WIDTH);
                                    jTextFieldLocalidad.grabFocus();
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(rootPane, "El Código postal debe contener 5 números","Error en el domicilio", WIDTH);
                                jTextFieldCP.grabFocus();
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane, "El domicilio no puede contener @ ni _ \n y no puede superar los 40 caracteres","Error en el domicilio", WIDTH);
                            jTextFieldDomicilio.grabFocus(); 
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "El apellido no puede contener números\n y no puede superar los 35 caracteres","Error en el apellido", WIDTH);
                        jTextFieldApellidos.grabFocus(); 
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "El nombre no puede contener números ni carácteres extraños \n y no puede superar los 15 caracteres","Error en el Nombre", WIDTH);
                    jTextFieldName.grabFocus(); 
                }
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "El NIF tiene que llevar 8 dígitos","Error en el NIF", WIDTH);
                jTextFieldNIF.grabFocus(); 
            }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "El código solo puede contener letras o números","Error en el código", WIDTH);
            jTextFieldCodigo.grabFocus(); 
        }
        /**
         * if(jTextFieldCodigo.getText().matches("[a-zA-Z0-9]{1,6}"));  Validacion del codigo
         * if(jTextFieldNIF.getText().matches("[0-9]{8}")):  Validacion del NIF
         * if(jTextFieldName.getText().matches("[a-zA-Z\\s]*"));  Esta es la validacion del nombre
         * if(jTextFieldApellidos.getText().matches("[a-zA-Z\\s.-]*"))  Validacion del apellido
         *  if(jTextFieldDomicilio.getText().matches("[a-zA-Z0-9\\s\\W]*")) Validacion del domicilio
         *  if(jTextFieldCP.getText().matches("[0-9]{5}")) Validacion del CP
         * if(jTextFieldLocalidad.getText().matches("[a-zA-Z\\s.-]*")) Validacion de la localidad
         * if(jTextFieldTelefono.getText().matches("[0-9]{9}")) Validacion del telefono
         * if(jTextFieldMovil.getText().matches("[0-9]{9}")) Validacion del movil
         * if(jTextFieldFax.getText().matches("[0-9]{9}")) Validacion del fax
         *  if(jTextFieldEmail.getText().matches("[a-zA-z0-9@_.-]*")) Verificacion del emAIL
        */ 
    }
    
    private void comprobarTextFields_Altas() throws Exception{
        //Tenemos que aher todas las validaciones en bucle, una por una.
        if(jTextFieldCodigo.getText().matches("[a-zA-Z0-9]{1,6}"))
        {
            if(jTextFieldNIF.getText().matches("[0-9]{8}"))
            {
                rellenarLetra();
                if(jTextFieldName.getText().matches("[a-zA-Z\\s]{1,15}"))
                {
                    if(jTextFieldApellidos.getText().matches("[a-zA-Z\\s.-]{1,35}"))
                    {
                        if(jTextFieldDomicilio.getText().matches("[a-zA-Z0-9\\s\\W]{1,40}"))
                        {
                            if(jTextFieldCP.getText().matches("[0-9]{5}")) 
                            {
                                if(jTextFieldLocalidad.getText().matches("[a-zA-Z\\s.-]{1,20}"))
                                {
                                    if(jTextFieldTelefono.getText().matches("[0-9]{9}") || jTextFieldTelefono.getText().equals(""))
                                    {
                                        if(jTextFieldMovil.getText().matches("[0-9]{9}") || jTextFieldMovil.getText().equals(""))
                                        {
                                            if(jTextFieldFax.getText().matches("[0-9]{9}") || jTextFieldFax.getText().equals(""))
                                            {
                                                if(jTextFieldEmail.getText().matches("[a-zA-z0-9@_.-]{1,20}") || jTextFieldEmail.getText().equals(""))
                                                {
                                                    JOptionPane.showMessageDialog(rootPane, "El formulario ha sido rellenado correctamente.","Formulario correcto.", WIDTH);
                                                    try {
                                                        cn.insertarVenta(jTextFieldCodigo.getText(), jTextFieldNIF.getText(), jTextFieldApellidos.getText(), jTextFieldName.getText(), jTextFieldDomicilio.getText(), jTextFieldCP.getText(), jTextFieldLocalidad.getText(), jTextFieldTelefono.getText(), jTextFieldMovil.getText(), jTextFieldFax.getText(), jTextFieldEmail.getText(), jTextFieldTotal.getText());
                                                    } catch (SQLException ex) {
                                                        JOptionPane.showMessageDialog(null, "ERROR en la inserción.", "ERROR.", JOptionPane.ERROR_MESSAGE);
                                                    }
                                                    borrarTodo();
                                                    deshabilitar2();
                                                }
                                                else
                                                {
                                                    JOptionPane.showMessageDialog(rootPane, "El email no puede contener acentos ni 'ñ' ni '/' \n y no puede superar los 20 caracteres","Error en el domicilio", WIDTH);
                                                    jTextFieldEmail.grabFocus();
                                                }
                                                
                                            }
                                            else
                                            {
                                                JOptionPane.showMessageDialog(rootPane, "El fax debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                                jTextFieldFax.grabFocus();
                                            }
                                        }
                                        else
                                        {
                                            JOptionPane.showMessageDialog(rootPane, "El móvil debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                            jTextFieldMovil.grabFocus();
                                        }
                                    }
                                    else
                                    {
                                        JOptionPane.showMessageDialog(rootPane, "El teléfono debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                        jTextFieldTelefono.grabFocus();
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(rootPane, "La localidad no puede contener números ni '_' \n y no puede superar los 20 caracteres","Error en el domicilio", WIDTH);
                                    jTextFieldLocalidad.grabFocus();
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(rootPane, "El Código postal debe contener 5 números","Error en el domicilio", WIDTH);
                                jTextFieldCP.grabFocus();
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane, "El domicilio no puede contener @ ni _ \n y no puede superar los 40 caracteres","Error en el domicilio", WIDTH);
                            jTextFieldDomicilio.grabFocus(); 
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "El apellido no puede contener números\n y no puede superar los 35 caracteres","Error en el apellido", WIDTH);
                        jTextFieldApellidos.grabFocus(); 
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "El nombre no puede contener números ni carácteres extraños \n y no puede superar los 15 caracteres","Error en el Nombre", WIDTH);
                    jTextFieldName.grabFocus(); 
                }
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "El NIF tiene que llevar 8 dígitos","Error en el NIF", WIDTH);
                jTextFieldNIF.grabFocus(); 
            }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "El código solo puede contener letras o números","Error en el código", WIDTH);
            jTextFieldCodigo.grabFocus(); 
        }
    }
    
    private void comprobarTextFields_Mod() throws Exception{
        //Tenemos que aher todas las validaciones en bucle, una por una.
        if(jTextFieldCodigo.getText().matches("[a-zA-Z0-9]{1,6}"))
        {
            if(jTextFieldNIF.getText().matches("[0-9]{8}"))
            {
                rellenarLetra();
                if(jTextFieldName.getText().matches("[a-zA-Z\\s]{1,15}"))
                {
                    if(jTextFieldApellidos.getText().matches("[a-zA-Z\\s.-]{1,35}"))
                    {
                        if(jTextFieldDomicilio.getText().matches("[a-zA-Z0-9\\s\\W]{1,40}"))
                        {
                            if(jTextFieldCP.getText().matches("[0-9]{5}")) 
                            {
                                if(jTextFieldLocalidad.getText().matches("[a-zA-Z\\s.-]{1,20}"))
                                {
                                    if(jTextFieldTelefono.getText().matches("[0-9]{9}") || jTextFieldTelefono.getText().equals(""))
                                    {
                                        if(jTextFieldMovil.getText().matches("[0-9]{9}") || jTextFieldMovil.getText().equals(""))
                                        {
                                            if(jTextFieldFax.getText().matches("[0-9]{9}") || jTextFieldFax.getText().equals(""))
                                            {
                                                if(jTextFieldEmail.getText().matches("[a-zA-z0-9@_.-]{1,20}") || jTextFieldEmail.getText().equals(""))
                                                {
                                                    JOptionPane.showMessageDialog(rootPane, "El formulario ha sido rellenado correctamente.","Formulario correcto.", WIDTH);
                                                    try {
                                                        cn.modCliente(jTextFieldCodigo.getText(), jTextFieldNIF.getText(), jTextFieldApellidos.getText(), jTextFieldName.getText(), jTextFieldDomicilio.getText(), jTextFieldCP.getText(), jTextFieldLocalidad.getText(), jTextFieldTelefono.getText(), jTextFieldMovil.getText(), jTextFieldFax.getText(), jTextFieldEmail.getText(), jTextFieldTotal.getText());
                                                    } catch (SQLException ex) {
                                                        JOptionPane.showMessageDialog(null, "ERROR en la modificación.", "ERROR.", JOptionPane.ERROR_MESSAGE);
                                                    }
                                                    borrarTodo();
                                                    deshabilitar2();
                                                }
                                                else
                                                {
                                                    JOptionPane.showMessageDialog(rootPane, "El email no puede contener acentos ni 'ñ' ni '/' \n y no puede superar los 20 caracteres","Error en el domicilio", WIDTH);
                                                    jTextFieldEmail.grabFocus();
                                                }
                                                
                                            }
                                            else
                                            {
                                                JOptionPane.showMessageDialog(rootPane, "El fax debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                                jTextFieldFax.grabFocus();
                                            }
                                        }
                                        else
                                        {
                                            JOptionPane.showMessageDialog(rootPane, "El móvil debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                            jTextFieldMovil.grabFocus();
                                        }
                                    }
                                    else
                                    {
                                        JOptionPane.showMessageDialog(rootPane, "El teléfono debe contener 9 dígitos numéricos","Error en el domicilio", WIDTH);
                                        jTextFieldTelefono.grabFocus();
                                    }
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(rootPane, "La localidad no puede contener números ni '_' \n y no puede superar los 20 caracteres","Error en el domicilio", WIDTH);
                                    jTextFieldLocalidad.grabFocus();
                                }
                            }
                            else
                            {
                                JOptionPane.showMessageDialog(rootPane, "El Código postal debe contener 5 números","Error en el domicilio", WIDTH);
                                jTextFieldCP.grabFocus();
                            }
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(rootPane, "El domicilio no puede contener @ ni _ \n y no puede superar los 40 caracteres","Error en el domicilio", WIDTH);
                            jTextFieldDomicilio.grabFocus(); 
                        }
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "El apellido no puede contener números\n y no puede superar los 35 caracteres","Error en el apellido", WIDTH);
                        jTextFieldApellidos.grabFocus(); 
                    }
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "El nombre no puede contener números ni carácteres extraños \n y no puede superar los 15 caracteres","Error en el Nombre", WIDTH);
                    jTextFieldName.grabFocus(); 
                }
            }
            else
            {
                JOptionPane.showMessageDialog(rootPane, "El NIF tiene que llevar 8 dígitos","Error en el NIF", WIDTH);
                jTextFieldNIF.grabFocus(); 
            }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "El código solo puede contener letras o números","Error en el código", WIDTH);
            jTextFieldCodigo.grabFocus(); 
        }
    }
    
    private void habilitar()
    {
        jTextFieldApellidos.setEnabled(true);
        jTextFieldCP.setEnabled(true);
        jTextFieldCodigo.setEnabled(true);
        jTextFieldDomicilio.setEnabled(true);
        jTextFieldEmail.setEnabled(true);
        jTextFieldFax.setEnabled(true);
        jTextFieldLocalidad.setEnabled(true);
        jTextFieldMovil.setEnabled(true);
        jTextFieldNIF.setEnabled(true);
        jTextFieldName.setEnabled(true);
        jTextFieldTelefono.setEnabled(true);
        jTextFieldTotal.setEnabled(false);
        jButtonAceptar.setEnabled(true);
        jButtonCancelar.setEnabled(true);
    }
    
    private void rellenarLetra()
    {
        int dni=Integer.valueOf(jTextFieldNIF.getText());
        String juegoCaracteres="TRWAGMYFPDXBNJZSQVHLCKE";
        int modulo= dni%23;
        char letra = juegoCaracteres.charAt(modulo);
        jTextFieldLetra.setText(String.valueOf(letra));
    
    }
    
    private void enDesarrollo(String nombreMenu, String nombreItem)
    {
        String t= nombreMenu+"-"+nombreItem;
        JOptionPane.showMessageDialog(rootPane,"En desarrollo", t, WIDTH);
    }
    private void enDesarrollo(String nombreMenu, String nombreItem, String nombreSubItem)
    {
        String t= nombreMenu+"-"+nombreItem+"-"+nombreSubItem;
        JOptionPane.showMessageDialog(rootPane,"En desarrollo", t, WIDTH);
    }
    
    private void rellenarCodigo() throws Exception
    {
        String dni=jTextFieldCodigo.getText();
        if(jTextFieldCodigo.getText().matches("[a-zA-Z0-9]{1,6}"))
        {
            while(dni.length()!=6)
            {
                dni="0"+dni;
            }
            jTextFieldCodigo.setText(dni);
        }
        else{
            JOptionPane.showMessageDialog(rootPane, "El código tiene que tener como mucho 6 números/letras.", dni, WIDTH);
            throw new Exception("");
        }
    }
   
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameClientes(Principal).setVisible(true);
            }
        });
    }
    
    protected void processWindowEvent(java.awt.event.WindowEvent e) {
        super.processWindowEvent(e);
        if (e.getID() == java.awt.event.WindowEvent.WINDOW_CLOSING) {
            Principal.setEnabled(true);
        }
     }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonAceptar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JLabel jLabelApellidos;
    private javax.swing.JLabel jLabelCP;
    private javax.swing.JLabel jLabelCodigo;
    private javax.swing.JLabel jLabelDomicilio;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelFax;
    private javax.swing.JLabel jLabelLocalidad;
    private javax.swing.JLabel jLabelMovil;
    private javax.swing.JLabel jLabelNIF;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelTelefono;
    private javax.swing.JLabel jLabelTotal;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuConsultas;
    private javax.swing.JMenu jMenuImpresora;
    private javax.swing.JMenuItem jMenuItemAltas;
    private javax.swing.JMenuItem jMenuItemBajas;
    private javax.swing.JMenuItem jMenuItemEntreCodigo;
    private javax.swing.JMenuItem jMenuItemGrafica;
    private javax.swing.JMenuItem jMenuItemModificacion;
    private javax.swing.JMenuItem jMenuItemPantalla;
    private javax.swing.JMenuItem jMenuItemPorCodigo;
    private javax.swing.JMenuItem jMenuItemVolver;
    private javax.swing.JMenu jMenuMantenimiento;
    private javax.swing.JTextField jTextFieldApellidos;
    private javax.swing.JTextField jTextFieldCP;
    private javax.swing.JTextField jTextFieldCodigo;
    private javax.swing.JTextField jTextFieldDomicilio;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldFax;
    private javax.swing.JTextField jTextFieldLetra;
    private javax.swing.JTextField jTextFieldLocalidad;
    private javax.swing.JTextField jTextFieldMovil;
    private javax.swing.JTextField jTextFieldNIF;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldTelefono;
    private javax.swing.JTextField jTextFieldTotal;
    // End of variables declaration//GEN-END:variables
}
